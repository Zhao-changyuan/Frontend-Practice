/*
 * Mixins 混合
 * 
*/
/* .a, #b {
  color: red;
}

.mixin-class {
  .a();
}

.mixin-id {
  #b();
} */
/* .my-mixin {
  color: black;
}
.my-other-mixin() {
  background: white;
}

.class {
  .my-mixin();
  .my-other-mixin();
} */
/* .my-hover-mixin() {
  &:hover {
    border: 1px solid red;
  }
}

button {
  .my-hover-mixin();
} */
/* #outer() {
  .inner {
    color: red;
  }
}

.c {
  #outer.inner();
} */
/* #my-library {
  .my-mixin() {
    color: black;
  }
}

.class {
  #my-library.my-mixin();
} */
/* @mode: huge;

#sp1 when (@mode = huge) {
  .mixin() {
    color: red;
  }
}

.class {
  #sp1.mixin();
}
 */
/* .foo (@bg: #f5f5f5; @color: #900) {
  background-color: @bg;
  color: @color;
}

.unimportant {
  .foo();
}

.important {
  .foo() !important;
} */
/* .border-radius(@radius: 5px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
}

#header {
  .border-radius()
} */
/* .wrap() {
  text-wrap: wrap;
  white-space: -moz-pre-wrap;
  white-space: pre-wrap;
  word-wrap: break-word;
}

pre {
  .wrap()
} */
/* .mixin(@color) {
  color-1: @color;
}
.mixin(@color, @padding: 2) {
  color-2: @color;
  padding-2: @padding;
}
.mixin(@color, @padding, @margin: 2) {
  color-3: @color;
  padding-3: @padding;
  margin: @margin @margin @margin @margin;
}

.some .selector div {
  .mixin(#008000)
} */
/* .mixin(@color: black; @margin: 10px; @padding: 20px) {
  color: @color;
  margin: @margin;
  padding: @padding;
}

.class1 {
  .mixin(@margin: 20px, @color: #33acfe)
}

.class2 {
  .mixin(#efca44; @padding: 40px)
} */
/* .box-shadow(@x: 0, @y: 0, @blur: 1px, @color: #000) {
  -webkit-box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  box-shadow: @arguments;
}

.big-block {
  .box-shadow(2px, 4px)
}
 */
/*  .mixin(dark, @color) {
   color: darken(@color, 10%);
 }

 .mixin(light, @color) {
   color: lighten(@color, 10%);
 }

 .mixin(@_, @color) {
   display: block;;
 }

 @switch: dark;

 .class {
   .mixin(@switch, #888);
 } */
/* .average(@x, @y) {
  @result: ((@x + @y) / 2);
}

div {
  padding: .average(16px, 50px)[@result];
} */
/* #library() {
  .mixin() {
    prop: foo;
  }
}

#library() {
  .mixin() {
    prop: bar;
  }
}

.box {
  my-value: #library.mixin[prop];
} */
/* .average(@x, @y) {
  @result: ((@x + @y) / 2);
}
div {
  padding: .average(16px, 50px)[]
} */
/* @dr: {
  value: foo;
}
.box {
  my-value: @dr[];
} */
/* .loop(@counter) when (@counter > 0) {
  .loop(@counter  - 1);
  width: (10px * @counter);
}
div {
  .loop(5);
} */
/* .generate-columns(4);

.generate-columns(@n, @i: 1) when (@i =< @n) {
  .column-@{i} {
    width: (@i * 100% / @n);
  }
  .generate-columns(@n, @i + 1)
} */
/* .mixin(@a) when (lightness(@a) >= 50%) {
  background-color: black;
}
.mixin(@a) when(lightness(@a) < 50%) {
  background-color: white;
}

.mixin(@a) {
  color: @a;
}

.class1 {
  .mixin(#ddd)
}
.class2 {
  .mixin(#555)
} */
/* #theme.dark.navbar {
  .colors(light) {
    primary: purple;
  }
  .colors(dark) {
    primary: black;
    secondary: grey;
  }
}

.navbar {
  @color: #theme.dark.navbar.colors(dark);
  background: @color[primary];
  border: 1px solid @color[secondary];
} */
.box {
  background: green;
}
